# This project is libre, and licenced under the terms of the
# DO WHAT THE FUCK YOU WANT TO PUBLIC LICENCE, version 3.1,
# as published by dtf on July 2019. See the COPYING file or
# https://ph.dtf.wtf/w/wtfpl/#version-3-1 for more details.

import html
from io import BufferedRandom, FileIO, TextIOWrapper
import os
import sqlite3
from typing import List, Union


# Write head template
def writeHead(out: Union[FileIO, TextIOWrapper, BufferedRandom]) -> None:
    out.write('/**\n')
    out.write(' * This file is generated by\n')
    out.write(' * https://github.com/misterabdul/kbbi-data-c-source-generator.\n')
    out.write(' **/\n\n')

# Read sqlite database
def readSqliteDatabase(query: str) -> List:
    con = sqlite3.connect('./submodules/kbbi-data-source/kbbi.db')
    cur = con.cursor()
    cur.execute(query)
    data = cur.fetchall()
    cur.close()
    con.close()
    return data

# Generate the C header file.
with open(os.path.join(os.path.dirname(__file__), 'kbbi_data.h'), 'r') as file:
    out = open(os.path.abspath(os.path.join(
        os.path.dirname(__file__), '..', 'out/kbbi_data.h')), 'w')
    writeHead(out)
    for line in file:
        out.write(line)
    out.close()
    file.close()

# Generate the C source file.
with open(os.path.join(os.path.dirname(__file__), 'kbbi_data.template.c'), 'r') as file:
    out = open(os.path.abspath(os.path.join(
        os.path.dirname(__file__), '..', 'out/kbbi_data.c')), 'w')
    writeHead(out)
    db = readSqliteDatabase('SELECT katakunci, artikata FROM datakata')
    for line in file:
        if('static const int katakunci_size = 0;' in line):
            out.write('static const int katakunci_size = '+str(len(db))+";\n")
        elif('static const int artikata_size = 0;' in line):
            out.write('static const int artikata_size = '+str(len(db))+";\n")
        elif('static char* katakunci[];' in line):
            out.write('static char* katakunci[] = {\n')
            for row in db:
                out.write('  \"'+html.unescape(row[0])+'\",\n')
            out.write('};\n')
        elif('static char* artikata[];' in line):
            out.write('static char* artikata[] = {\n')
            for row in db:
                out.write('  \"'+html.unescape(row[1]).replace('\"', '\\\"')+'\",\n')
            out.write('};\n')
        elif('return 0; /* tobe replaced */' in line):
            out.write('  return '+str(len(db))+';\n')
        else:
            out.write(line)
    out.write('\n')
    out.close()
    file.close()
